* C贸digo para la creaci贸n y poblaci贸n de modelos, tablas y PK-FK
** Crear la BBDD - PODS

-- La base de datos utilizada es PODS "Practica ODS"

create database PODS;

** Creamos el modelo CLIENTES

USE PODS;

-- -----------------------------------------------------
-- Table `ODS_HC_CLIENTES`
-- -----------------------------------------------------

DROP TABLE IF EXISTS `ODS_HC_CLIENTES` ;
SHOW WARNINGS;

CREATE TABLE IF NOT EXISTS `ODS_HC_CLIENTES` (
  `ID_CLIENTE` INT(11) NOT NULL,
  `NOMBRE_CLIENTE` VARCHAR(512) NULL DEFAULT NULL,
  `APELLIDOS_CLIENTE` VARCHAR(512) NULL DEFAULT NULL,
  `NUMDOC_CLIENTE` VARCHAR(24) NULL DEFAULT NULL,
  `ID_SEXO` INT(10) UNSIGNED NULL DEFAULT NULL,
  `ID_DIRECCION_CLIENTE` INT(10) UNSIGNED NULL DEFAULT NULL,
  `TELEFONO_CLIENTE` BIGINT(20) NULL DEFAULT NULL,
  `EMAIL` VARCHAR(512) NULL DEFAULT NULL,
  `FC_NACIMIENTO` DATE NULL DEFAULT NULL,
  `ID_PROFESION` INT(10) UNSIGNED NULL DEFAULT NULL,
  `ID_COMPANYA` INT(10) UNSIGNED NULL DEFAULT NULL,
  `FC_INSERT` DATETIME NULL DEFAULT NULL,
  `FC_MODIFICACION` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_CLIENTE`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ODS_DM_SEXOS`
-- -----------------------------------------------------

DROP TABLE IF EXISTS `ODS_DM_SEXOS` ;
SHOW WARNINGS;

CREATE TABLE IF NOT EXISTS `ODS_DM_SEXOS` (
  `ID_SEXO` INT(10) UNSIGNED NOT NULL,
  `DE_SEXO` VARCHAR(64) NULL DEFAULT NULL,
  `FC_INSERT` DATETIME NULL DEFAULT NULL,
  `FC_MODIFICACION` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_SEXO`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

SHOW WARNINGS;

ANALYZE TABLE ODS_DM_SEXOS;

-- -----------------------------------------------------
-- Table `ODS_DM_PROFESIONES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ODS_DM_PROFESIONES` ;
SHOW WARNINGS;

CREATE TABLE IF NOT EXISTS `ODS_DM_PROFESIONES` (
  `ID_PROFESION` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `DE_PROFESION` VARCHAR(512) NULL DEFAULT NULL,
  `FC_INSERT` DATETIME NULL DEFAULT NULL,
  `FC_MODIFICACION` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_PROFESION`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

SHOW WARNINGS;

ANALYZE TABLE ODS_DM_PROFESIONES;

-- -----------------------------------------------------
-- Table `ODS_DM_COMPANYAS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ODS_DM_COMPANYAS` ;
SHOW WARNINGS;

CREATE TABLE IF NOT EXISTS `ODS_DM_COMPANYAS` (
  `ID_COMPANYA` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `DE_COMPANYA` VARCHAR(512) NULL DEFAULT NULL,
  `FC_INSERT` DATETIME NULL DEFAULT NULL,
  `FC_MODIFICACION` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_COMPANYA`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

SHOW WARNINGS;

ANALYZE TABLE ODS_DM_COMPANYAS;

-- -----------------------------------------------------
-- Table `ODS_HC_DIRECCIONES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ODS_HC_DIRECCIONES` ;
SHOW WARNINGS;

CREATE TABLE IF NOT EXISTS `ODS_HC_DIRECCIONES` (
  `ID_DIRECCION` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `DE_DIRECCION` VARCHAR(512) NULL DEFAULT NULL,
  `DE_CP` INT(11) NULL DEFAULT NULL,
  `ID_CIUDAD_ESTADO` INT(10) UNSIGNED NULL DEFAULT NULL,
  `FC_INSERT` DATETIME NULL DEFAULT NULL,
  `FC_MODIFICACION` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_DIRECCION`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

SHOW WARNINGS;

ANALYZE TABLE ODS_HC_DIRECCIONES;

-- -----------------------------------------------------
-- Table `ODS_DM_CIUDADES_ESTADOS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ODS_DM_CIUDADES_ESTADOS` ;
SHOW WARNINGS;

CREATE TABLE IF NOT EXISTS `ODS_DM_CIUDADES_ESTADOS` (
  `ID_CIUDAD_ESTADO` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `DE_CIUDAD` VARCHAR(512) NULL DEFAULT NULL,
  `DE_ESTADO` VARCHAR(512) NULL DEFAULT NULL,
  `ID_PAIS` INT(10) UNSIGNED NULL DEFAULT NULL,
  `FC_INSERT` DATETIME NULL DEFAULT NULL,
  `FC_MODIFICACION` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_CIUDAD_ESTADO`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

SHOW WARNINGS;

ANALYZE TABLE ODS_DM_CIUDADES_ESTADOS;

-- -----------------------------------------------------
-- Table `ODS_DM_PAISES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ODS_DM_PAISES` ;
SHOW WARNINGS;

CREATE TABLE IF NOT EXISTS `ODS_DM_PAISES` (
  `ID_PAIS` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `DE_PAIS` VARCHAR(512) NULL DEFAULT NULL,
  `FC_INSERT` DATETIME NULL DEFAULT NULL,
  `FC_MODIFICACION` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_PAIS`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

SHOW WARNINGS;

ANALYZE TABLE ODS_DM_PAISES;

/* Modificaciones sobre las tablas */

ALTER TABLE PODS.ODS_HC_CLIENTES ADD INDEX fk_cli_sexo_idx (ID_SEXO ASC);

ALTER TABLE PODS.ODS_HC_CLIENTES ADD constraint fk_cli_sexo foreign key (ID_SEXO)
  references PODS.ODS_DM_SEXOS (ID_SEXO);

ALTER TABLE PODS.ODS_HC_CLIENTES ADD INDEX fk_cli_prof_idx (ID_PROFESION ASC);

ALTER TABLE PODS.ODS_HC_CLIENTES ADD constraint fk_cli_prof foreign key (ID_PROFESION)
  references PODS.ODS_DM_PROFESIONES (ID_PROFESION);

ALTER TABLE PODS.ODS_HC_CLIENTES ADD INDEX fk_cli_comp_idx (ID_COMPANYA ASC);

ALTER TABLE PODS.ODS_HC_CLIENTES ADD constraint fk_cli_comp foreign key (ID_COMPANYA)
  references PODS.ODS_DM_COMPANYAS (ID_COMPANYA);
  
ALTER TABLE PODS.ODS_HC_CLIENTES ADD INDEX fk_cli_dir_idx (ID_DIRECCION_CLIENTE ASC);

ALTER TABLE PODS.ODS_HC_CLIENTES ADD constraint fk_cli_dir foreign key (ID_DIRECCION_CLIENTE)
  references PODS.ODS_HC_DIRECCIONES (ID_DIRECCION);
  
ALTER TABLE PODS.ODS_DM_CIUDADES_ESTADOS ADD INDEX fk_ciu_pai_idx (ID_PAIS ASC);

ALTER TABLE PODS.ODS_DM_CIUDADES_ESTADOS ADD constraint fk_ciu_pai foreign key (ID_PAIS)
  references PODS.ODS_DM_PAISES (ID_PAIS);
  
ALTER TABLE PODS.ODS_HC_DIRECCIONES ADD INDEX fk_dir_ciu_idx (ID_CIUDAD_ESTADO ASC);

ALTER TABLE PODS.ODS_HC_DIRECCIONES ADD constraint fk_dir_ciu foreign key (ID_CIUDAD_ESTADO)
  references PODS.ODS_DM_CIUDADES_ESTADOS (ID_CIUDAD_ESTADO);

/*Insertar valores*/

INSERT INTO ODS_DM_SEXOS values (1,'MALE',now(),now());
INSERT INTO ODS_DM_SEXOS values (2,'FEMALE',now(),now());
INSERT INTO ODS_DM_SEXOS values (99,'DESCONOCIDO',now(),now());
INSERT INTO ODS_DM_SEXOS values (98,'NO APLICA',now(),now());

commit;

INSERT INTO ODS_DM_PROFESIONES (DE_PROFESION, FC_INSERT, FC_MODIFICACION)
select distinct UPPER(trim(PROFESION)) PROFESION, now(), now()
from STAGE.STG_CLIENTES_CRM
where trim(PROFESION)<>'';

commit;

INSERT INTO ODS_DM_PROFESIONES values (999, 'DESCONOCIDO', FC_INSERT, FC_MODIFICACION);
INSERT INTO ODS_DM_PROFESIONES values (998, 'NO APLICA', FC_INSERT, FC_MODIFICACION);

commit;

INSERT INTO ODS_DM_COMPANYAS (DE_COMPANYA, FC_INSERT, FC_MODIFICACION)
select distinct UPPER(trim(COMPANY)) ID_COMPANYA, now(), now()
from STAGE.STG_CLIENTES_CRM
where trim(COMPANY)<>'';

commit;

INSERT INTO ODS_DM_COMPANYAS values (999, 'DESCONOCIDO', FC_INSERT, FC_MODIFICACION);
INSERT INTO ODS_DM_COMPANYAS values (998, 'NO APLICA', FC_INSERT, FC_MODIFICACION);

commit;

INSERT INTO ODS_DM_PAISES (DE_PAIS, FC_INSERT, FC_MODIFICACION)
select distinct UPPER(trim(COUNTRY)) PAIS, now(), now()
from STAGE.STG_CLIENTES_CRM
where trim(STATE)<>'';

INSERT INTO ODS_DM_PAISES values (99, 'DESCONOCIDO', FC_INSERT, FC_MODIFICACION);
INSERT INTO ODS_DM_PAISES values (98, 'NO APLICA', FC_INSERT, FC_MODIFICACION);

INSERT INTO ODS_DM_CIUDADES_ESTADOS (DE_CIUDAD, DE_ESTADO, ID_PAIS, FC_INSERT, FC_MODIFICACION)
select distinct UPPER(trim(CITY)) CIUDAD, upper(trim(STATE)) ESTADO, PAI.ID_PAIS, now(), now()
from STAGE.STG_CLIENTES_CRM CLI
inner join PODS.ODS_DM_PAISES PAI ON CASE WHEN LENGTH(trim(CLI.COUNTRY))<>0 THEN CLI.COUNTRY ELSE 'DESCONOCIDO' END=PAI.DE_PAIS
where trim(CITY)<>'';

INSERT INTO ODS_DM_CIUDADES_ESTADOS values (999, 'DESCONOCIDO', 'DESCONOCIDO', 99, now(), now());
INSERT INTO ODS_DM_CIUDADES_ESTADOS values (998, 'NO APLICA', 'NO APLICA', 98, now(), now());

INSERT INTO ODS_HC_DIRECCIONES (DE_DIRECCION,DE_CP,ID_CIUDAD_ESTADO,FC_INSERT,FC_MODIFICACION)
select distinct UPPER(trim(ADDRESS)) DIRECCION
, CASE WHEN LENGTH(trim(CLI.POSTAL_CODE))<>0 THEN trim(CLI.POSTAL_CODE) ELSE 99999 END CP, CIU.ID_CIUDAD_ESTADO, now(), now()
from STAGE.STG_CLIENTES_CRM CLI
inner join PODS.ODS_DM_PAISES PAI ON CASE WHEN LENGTH(trim(CLI.COUNTRY))<>0 THEN CLI.COUNTRY ELSE 'DESCONOCIDO' END=PAI.DE_PAIS
inner join PODS.ODS_DM_CIUDADES_ESTADOS CIU ON CASE WHEN LENGTH(trim(CLI.CITY))<>0 THEN CLI.CITY ELSE 'DESCONOCIDO' END=CIU.DE_CIUDAD
								   AND CASE WHEN LENGTH(trim(CLI.STATE))<>0 THEN CLI.STATE ELSE 'DESCONOCIDO' END=CIU.DE_ESTADO
where trim(ADDRESS)<>'';

INSERT INTO ODS_HC_DIRECCIONES values (999999, 'DESCONOCIDO', 99999, 999,now(), now());
INSERT INTO ODS_HC_DIRECCIONES values (999998, 'NO APLICA', 99998, 998, now(), now());

COMMIT;

/*Creaci贸n de tablas temporales*/

drop table if exists TMP_DIRECCIONES_CLIENTES;

CREATE TABLE TMP_DIRECCIONES_CLIENTES AS
SELECT DIR.ID_DIRECCION
, DIR.DE_DIRECCION
, DIR.DE_CP
, CIU.DE_CIUDAD
, CIU.DE_ESTADO
, PAI.DE_PAIS
FROM PODS.ODS_HC_DIRECCIONES DIR
INNER JOIN PODS.ODS_DM_CIUDADES_ESTADOS CIU ON DIR.ID_CIUDAD_ESTADO=CIU.ID_CIUDAD_ESTADO
INNER JOIN PODS.ODS_DM_PAISES PAI ON CIU.ID_PAIS=PAI.ID_PAIS;

analyze table TMP_DIRECCIONES_CLIENTES;

drop table if exists TMP_DIRECCIONES_CLIENTES2;

CREATE TABLE TMP_DIRECCIONES_CLIENTES2 AS
SELECT CLIENTES.CUSTOMER_ID ID_CLIENTE
, DIR.ID_DIRECCION
FROM STAGE.STG_CLIENTES_CRM CLIENTES
INNER JOIN PODS.TMP_DIRECCIONES_CLIENTES DIR ON CASE WHEN TRIM(ADDRESS)<>'' THEN UPPER(TRIM(CLIENTES.ADDRESS)) ELSE 'DESCONOCIDO' END=DIR.DE_DIRECCION
                                           AND CASE WHEN TRIM(POSTAL_CODE)<>'' THEN TRIM(CLIENTES.POSTAL_CODE) ELSE 99999 END=DIR.DE_CP
                                           AND CASE WHEN TRIM(CLIENTES.CITY)<>'' THEN CLIENTES.CITY ELSE 'DESCONOCIDO' END=DIR.DE_CIUDAD
                                           AND CASE WHEN TRIM(CLIENTES.STATE)<>'' THEN CLIENTES.STATE ELSE 'DESCONOCIDO' END=DIR.DE_ESTADO
                                           AND CASE WHEN TRIM(CLIENTES.COUNTRY)<>'' THEN CLIENTES.COUNTRY ELSE 'DESCONOCIDO' END=DIR.DE_PAIS;

analyze table TMP_DIRECCIONES_CLIENTES2;

/*insertar en tabla ODS_HC_CLIENTES*/

insert into ODS_HC_CLIENTES
SELECT CUSTOMER_ID AS ID_CLIENTE
, CASE WHEN TRIM(FIRST_NAME)<>'' THEN TRIM(UPPER(FIRST_NAME)) ELSE 'DESCONOCIDO' END NOMBRE_CLIENTE
, CASE WHEN TRIM(LAST_NAME)<>'' THEN TRIM(UPPER(LAST_NAME)) ELSE 'DESCONOCIDO' END APELLIDOS_CLIENTE
, CASE WHEN TRIM(IDENTIFIED_DOC)<>'' THEN TRIM(UPPER(IDENTIFIED_DOC)) ELSE '99-999-9999' END NUMDOC_CLIENTE
, ID_SEXO
, CASE WHEN TRIM(DIR.ID_DIRECCION)<>'' THEN DIR.ID_DIRECCION ELSE 999999 END ID_DIRECCION
, CASE WHEN TRIM(PHONE)<>'' THEN REPLACE(PHONE,'-','') ELSE 9999999999 END TELEFONO_CLIENTE
, CASE WHEN TRIM(EMAIL)<>'' THEN TRIM(UPPER(EMAIL)) ELSE 'DESCONOCIDO' END EMAIL
, CASE WHEN TRIM(BIRTHDAY)<>'' THEN STR_TO_DATE(BIRTHDAY,'%d/%m/%Y') ELSE STR_TO_DATE('31/12/999','%d/%m/%Y') END FC_NACIMIENTO
, PROF.ID_PROFESION
, COMP.ID_COMPANYA
, NOW()
, STR_TO_DATE('31/12/9999','%d/%m/%Y')
FROM STAGE.STG_CLIENTES_CRM CLIENTES
INNER JOIN PODS.ODS_DM_SEXOS SEXO ON CASE WHEN TRIM(GENDER)<>'' THEN UPPER(TRIM(CLIENTES.GENDER)) ELSE 'DESCONOCIDO' END=SEXO.DE_SEXO
INNER JOIN PODS.ODS_DM_PROFESIONES PROF ON CASE WHEN TRIM(PROFESION)<>'' THEN UPPER(TRIM(CLIENTES.PROFESION)) ELSE 'NO APLICA' END=PROF.DE_PROFESION
INNER JOIN PODS.ODS_DM_COMPANYAS COMP ON CASE WHEN TRIM(COMPANY)<>'' THEN UPPER(TRIM(CLIENTES.COMPANY)) ELSE 'DESCONOCIDO' END=COMP.DE_COMPANYA
LEFT OUTER JOIN PODS.TMP_DIRECCIONES_CLIENTES2 DIR ON DIR.ID_CLIENTE=CLIENTES.CUSTOMER_ID;

commit;

analyze table ODS_HC_CLIENTES;

drop table IF exists TMP_DIRECCIONES_CLIENTES;
drop table IF exists TMP_DIRECCIONES_CLIENTES2;

** Creamos el modelo SERVICIOS

USE PODS;

drop table IF exists ODS_HC_SERVICIOS;

CREATE TABLE IF NOT EXISTS `ODS_HC_SERVICIOS` (
  `ID_SERVICIO` INT(10) NOT NULL,
  `ID_CLIENTE` INT(11) NULL DEFAULT NULL,
  `ID_PRODUCTO` INT(10) UNSIGNED NULL DEFAULT NULL,
  `PUNTO_ACCESO` VARCHAR(512) NULL DEFAULT NULL,
  `ID_CANAL` INT(10) UNSIGNED NULL DEFAULT NULL,
  `ID_AGENTE` INT(11) NULL DEFAULT NULL,
  `ID_DIRECCION_SERVICIO` INT(10) UNSIGNED NULL DEFAULT NULL,
  `FC_INICIO` DATETIME NULL DEFAULT NULL,
  `FC_INSTALACION` DATETIME NULL DEFAULT NULL,
  `FC_FIN` DATETIME NULL DEFAULT NULL,
  `FC_INSERT` DATETIME NULL DEFAULT NULL,
  `FC_MODIFICACION` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_SERVICIO`))

-- -----------------------------------------------------
-- Table `ODS_DM_CANALES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ODS_DM_CANALES` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ODS_DM_CANALES` (
  `ID_CANAL` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `DE_CANAL` VARCHAR(512) NULL DEFAULT NULL,
  `FC_INSERT` DATETIME NULL DEFAULT NULL,
  `FC_MODIFICACION` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_CANAL`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ODS_DM_PRODUCTOS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ODS_DM_PRODUCTOS` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ODS_DM_PRODUCTOS` (
  `ID_PRODUCTO` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `DE_PRODUCTO` VARCHAR(512) NULL DEFAULT NULL,
  `FC_INSERT` DATETIME NULL DEFAULT NULL,
  `FC_MODIFICACION` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_PRODUCTO`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

SHOW WARNINGS;

/*Modificaciones sobre las tablas y a帽adimos las PK y FK*/

alter table PODS.ODS_HC_SERVICIOS ADD INDEX fk_serv_canal_idx (ID_CANAL ASC);
alter table PODS.ODS_HC_SERVICIOS ADD constraint fk_serv_canal foreign key (ID_CANAL)
  references PODS.ODS_DM_CANALES (ID_CANAL);
  
alter table PODS.ODS_HC_SERVICIOS ADD INDEX fk_serv_prod_idx (ID_PRODUCTO ASC);
alter table PODS.ODS_HC_SERVICIOS ADD constraint fk_serv_prod foreign key (ID_PRODUCTO)
  references PODS.ODS_DM_PRODUCTOS (ID_PRODUCTO);
  
alter table PODS.ODS_HC_SERVICIOS ADD INDEX fk_serv_cli_idx (ID_CLIENTE ASC);
alter table PODS.ODS_HC_SERVICIOS ADD constraint fk_serv_cli foreign key (ID_CLIENTE)
  references PODS.ODS_HC_CLIENTES (ID_CLIENTE);
  
alter table PODS.ODS_HC_SERVICIOS ADD INDEX fk_serv_dir_idx (ID_DIRECCION_SERVICIO ASC);
alter table PODS.ODS_HC_SERVICIOS ADD constraint fk_serv_dir foreign key (ID_DIRECCION_SERVICIO)
  references PODS.ODS_HC_DIRECCIONES (ID_DIRECCION);
  
/*Insertar valores*/

insert into ODS_DM_CANALES (DE_CANAL, FC_INSERT, FC_MODIFICACION)
select distinct UPPER(trim(CHANNEL)) CANAL, now(), now()
from STAGE.STG_PRODUCTOS_CRM
where trim(CHANNEL)<>'';

commit;

INSERT into ODS_DM_CANALES values (999,'DESCONOCIDO',now(),now());
INSERT into ODS_DM_CANALES values (998,'NO APLICA',now(),now());

commit;
analyze table ODS_DM_CANALES;

insert into ODS_DM_PRODUCTOS (DE_PRODUCTO, FC_INSERT, FC_MODIFICACION)
select distinct UPPER(trim(PRODUCT_NAME)) NOMBRE_PRODUCTO, now(), now()
from STAGE.STG_PRODUCTOS_CRM
where trim(PRODUCT_NAME)<>'';

commit;

INSERT into ODS_DM_PRODUCTOS values (999,'DESCONOCIDO',now(),now());
INSERT into ODS_DM_PRODUCTOS values (998,'NO APLICA',now(),now());

commit;
analyze table ODS_DM_PRODUCTOS;

-- A帽adimos los paises de Productos a la tabla de Paises previemente creada

CREATE TRIGGER trigger_paises BEFORE INSERT ON PODS.ODS_DM_PAISES
FOR EACH ROW SET NEW.ID_PAIS=(select max(ID_PAIS)+1 from ODS_DM_PAISES where ODS_DM_PAISES.ID_PAIS NOT IN (98,99));

INSERT INTO ODS_DM_PAISES ( DE_PAIS, FC_INSERT, FC_MODIFICACION)
select distinct 
CASE UPPER(trim(PRODUCT_COUNTRY)) when "UNITED STATES" then 'US' else UPPER(trim(PRODUCT_COUNTRY)) end as DE_PAIS
, now() F1, now() F2
from STAGE.STG_PRODUCTOS_CRM SERVICIOS
where trim(PRODUCT_COUNTRY)<>'' and (CASE UPPER(trim(PRODUCT_COUNTRY)) when "UNITED STATES" then 'US' else UPPER(trim(PRODUCT_COUNTRY)) end) not in (select UPPER(trim(DE_PAIS)) from PODS.ODS_DM_PAISES );

commit;
analyze table ODS_DM_PAISES;

-- A帽adimos las ciudades estado de Productos a la tabla  previemente creada

CREATE TRIGGER trigger_ciudad_estado BEFORE INSERT ON PODS.ODS_DM_CIUDADES_ESTADOS
FOR EACH ROW SET NEW.ID_CIUDAD_ESTADO=(select max(ID_CIUDAD_ESTADO)+1 from ODS_DM_CIUDADES_ESTADOS where ODS_DM_CIUDADES_ESTADOS.ID_CIUDAD_ESTADO NOT IN (998,999));

insert into ODS_DM_CIUDADES_ESTADOS (DE_CIUDAD, DE_ESTADO, ID_PAIS, FC_INSERT, FC_MODIFICACION)
select distinct 
UPPER(trim(PRODUCT_CITY)) CIUDAD
, upper(trim(PRODUCT_STATE)) ESTADO
, PAI.ID_PAIS
, now() F1, now() F2
from STAGE.STG_PRODUCTOS_CRM SERVICIOS
inner join PODS.ODS_DM_PAISES PAI ON CASE WHEN LENGTH(trim(PRODUCT_COUNTRY))<>0 THEN (CASE UPPER(trim(PRODUCT_COUNTRY)) when "UNITED STATES" then 'US' else UPPER(trim(PRODUCT_COUNTRY)) end) ELSE 'DESCONOCIDO' END=PAI.DE_PAIS
where trim(PRODUCT_CITY)<>''
and trim(PRODUCT_STATE)<>''
and trim(PRODUCT_COUNTRY)<>''
and 
(UPPER(trim(PRODUCT_CITY)), UPPER(trim(PRODUCT_STATE)), PAI.ID_PAIS) not in 
(select 
UPPER(trim(DE_CIUDAD)), upper(trim(DE_ESTADO)), ID_PAIS
from PODS.ODS_DM_CIUDADES_ESTADOS);

-- A帽adimos las direcciones de Productos a la tabla  previemente creada
-- En principio creo que daria igual repetir las direcciones ya que se trata de una 
-- tabla HC, pero se van a incluir solo las que sean diferentes
-- con esto se corre el riesgo de incluir la misma direccion pero escrita de forma distinta
-- cosa que NO se va a averificar
-- La insercion de este modo lleva mucho tiempo y recursos por lo que aparece comentada.

CREATE TRIGGER trigger_direccion BEFORE INSERT ON PODS.ODS_HC_DIRECCIONES
FOR EACH ROW SET NEW.ID_DIRECCION=(select max(ID_DIRECCION)+1 from ODS_HC_DIRECCIONES where ODS_HC_DIRECCIONES.ID_DIRECCION NOT IN (999998,999999));

insert into ODS_HC_DIRECCIONES (DE_DIRECCION, DE_CP, ID_CIUDAD_ESTADO, FC_INSERT, FC_MODIFICACION)
select distinct 
UPPER(trim(PRODUCT_ADDRESS)) DIRECCION
, CASE WHEN LENGTH(trim(SERVICIOS.PRODUCT_POSTAL_CODE))<>0 THEN trim(SERVICIOS.PRODUCT_POSTAL_CODE) ELSE 99999 END CP
, CIU.ID_CIUDAD_ESTADO
, now() F1, now() F2
from STAGE.STG_PRODUCTOS_CRM SERVICIOS
inner join PODS.ODS_DM_PAISES PAI ON CASE WHEN LENGTH(trim(SERVICIOS.PRODUCT_COUNTRY))<>0 THEN (CASE UPPER(trim(PRODUCT_COUNTRY)) when "UNITED STATES" then 'US' else UPPER(trim(PRODUCT_COUNTRY)) end) ELSE 'DESCONOCIDO' END=PAI.DE_PAIS
inner join PODS.ODS_DM_CIUDADES_ESTADOS CIU ON CASE WHEN LENGTH(trim(SERVICIOS.PRODUCT_CITY))<>0 THEN SERVICIOS.PRODUCT_CITY ELSE 'DESCONOCIDO' END=CIU.DE_CIUDAD
								   AND CASE WHEN LENGTH(trim(SERVICIOS.PRODUCT_STATE))<>0 THEN SERVICIOS.PRODUCT_STATE ELSE 'DESCONOCIDO' END=CIU.DE_ESTADO
where trim(PRODUCT_ADDRESS)<>''
and trim(PRODUCT_CITY)<>''
and trim(PRODUCT_STATE)<>''
and trim(PRODUCT_COUNTRY)<>''
and 
(UPPER(trim(PRODUCT_ADDRESS)), PRODUCT_POSTAL_CODE, CIU.ID_CIUDAD_ESTADO) not in 
(select 
UPPER(trim(DE_DIRECCION)), DE_CP, ID_CIUDAD_ESTADO
from PODS.ODS_HC_DIRECCIONES)
;

-- Para crear la tabla ODS_HC_SERVICIOS creamos dos tablas temporales

drop table if exists TMP_DIRECCIONES_PRODUCTOS;

CREATE TABLE TMP_DIRECCIONES_PRODUCTOS AS
SELECT DIR.ID_DIRECCION
, DIR.DE_DIRECCION
, DIR.DE_CP
, CIU.DE_CIUDAD
, CIU.DE_ESTADO
, PAI.DE_PAIS
FROM PODS.ODS_HC_DIRECCIONES DIR
INNER JOIN PODS.ODS_DM_CIUDADES_ESTADOS CIU ON DIR.ID_CIUDAD_ESTADO=CIU.ID_CIUDAD_ESTADO
INNER JOIN PODS.ODS_DM_PAISES PAI ON CIU.ID_PAIS=PAI.ID_PAIS;

analyze table TMP_DIRECCIONES_PRODUCTOS;

drop table if exists TMP_DIRECCIONES_PRODUCTOS2;

CREATE TABLE TMP_DIRECCIONES_PRODUCTOS2 AS
SELECT SERVICIOS.PRODUCT_ID ID_PRODUCTO
, DIR.ID_DIRECCION
FROM STAGE.STG_PRODUCTOS_CRM SERVICIOS
INNER JOIN PODS.TMP_DIRECCIONES_PRODUCTOS DIR ON CASE WHEN TRIM(PRODUCT_ADDRESS)<>'' THEN UPPER(TRIM(SERVICIOS.PRODUCT_ADDRESS)) ELSE 'DESCONOCIDO' END=DIR.DE_DIRECCION
                                           AND CASE WHEN TRIM(PRODUCT_POSTAL_CODE)<>'' THEN TRIM(SERVICIOS.PRODUCT_POSTAL_CODE) ELSE 99999 END=DIR.DE_CP
                                           AND CASE WHEN TRIM(SERVICIOS.PRODUCT_CITY)<>'' THEN SERVICIOS.PRODUCT_CITY ELSE 'DESCONOCIDO' END=DIR.DE_CIUDAD
                                           AND CASE WHEN TRIM(SERVICIOS.PRODUCT_STATE)<>'' THEN SERVICIOS.PRODUCT_STATE ELSE 'DESCONOCIDO' END=DIR.DE_ESTADO
                                           AND CASE WHEN TRIM(SERVICIOS.PRODUCT_COUNTRY)<>'' THEN 
                                                  (CASE UPPER(trim(PRODUCT_COUNTRY)) when "UNITED STATES" then 'US' else UPPER(trim(PRODUCT_COUNTRY)) end)  ELSE 'DESCONOCIDO' END=DIR.DE_PAIS;

analyze table TMP_DIRECCIONES_PRODUCTOS2;

-- Insertamos en tabla ODS_HC_SERVICIOS

INSERT INTO ODS_HC_SERVICIOS
SELECT PRODUCT_ID as ID_SERVICIO,
CUSTOMER_ID as ID_CLIENTE,
PROD.ID_PRODUCTO,
CASE WHEN TRIM(ACCESS_POINT)<>'' THEN TRIM(UPPER(ACCESS_POINT)) ELSE 'DESCONOCIDO' END PUNTO_ACCESO,
CANALES.ID_CANAL,
CASE WHEN TRIM(AGENT_CODE)<>'' THEN TRIM(UPPER(AGENT_CODE)) ELSE 'DESCONOCIDO' END ID_AGENTE,
CASE WHEN TRIM(DIR.ID_DIRECCION)<>'' THEN DIR.ID_DIRECCION ELSE 999999 END ID_DIRECCION,
CASE WHEN TRIM(START_DATE)<>'' THEN STR_TO_DATE(START_DATE,'%d/%m/%Y') ELSE STR_TO_DATE('31/12/9999','%d/%m/%Y') END FC_INICIO,
CASE WHEN TRIM(INSTALL_DATE)<>'' THEN STR_TO_DATE(INSTALL_DATE,'%d/%m/%Y') ELSE STR_TO_DATE('31/12/9999','%d/%m/%Y') END FC_INSTALACION,
CASE WHEN TRIM(END_DATE)<>'' THEN STR_TO_DATE(END_DATE,'%d/%m/%Y') ELSE STR_TO_DATE('31/12/9999','%d/%m/%Y') END FC_FIN,
NOW(),
STR_TO_DATE('31/12/9999','%d/%m/%Y')
FROM STAGE.STG_PRODUCTOS_CRM SERVICIOS
INNER JOIN PODS.ODS_DM_PRODUCTOS PROD ON CASE WHEN TRIM(SERVICIOS.PRODUCT_NAME)<>'' 
   THEN UPPER(TRIM(SERVICIOS.PRODUCT_NAME)) ELSE 'DESCONOCIDO' END=PROD.DE_PRODUCTO
INNER JOIN PODS.ODS_DM_CANALES CANALES ON CASE WHEN TRIM(SERVICIOS.CHANNEL)<>'' 
   THEN UPPER(TRIM(SERVICIOS.CHANNEL)) ELSE 'DESCONOCIDO' END=CANALES.DE_CANAL
INNER JOIN PODS.ODS_HC_CLIENTES CLI ON CLI.ID_CLIENTE=SERVICIOS.CUSTOMER_ID
LEFT OUTER JOIN PODS.TMP_DIRECCIONES_PRODUCTOS2 DIR ON DIR.ID_PRODUCTO=SERVICIOS.PRODUCT_ID;

analyze table ODS_HC_SERVICIOS;

commit;

drop table IF exists TMP_DIRECCIONES_CLIENTES;
drop table IF exists TMP_DIRECCIONES_CLIENTES2;

** Creamos el modelo FACTURAS

USE PODS;
-- -----------------------------------------------------
-- Table `ODS_HC_FACTURAS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ODS_HC_FACTURAS` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ODS_HC_FACTURAS` (
  `ID_FACTURA` INT(10) UNSIGNED NOT NULL,
  `ID_CLIENTE` INT(11) NULL DEFAULT NULL,
  `FC_INICIO` DATETIME NULL DEFAULT NULL,
  `FC_FIN` DATETIME NULL DEFAULT NULL,
  `FC_ESTADO` DATETIME NULL DEFAULT NULL,
  `FC_PAGO` DATETIME NULL DEFAULT NULL,
  `ID_CICLO_FACTURACION` INT(10) UNSIGNED NULL DEFAULT NULL,
  `ID_METODO_PAGO` INT(10) UNSIGNED NULL DEFAULT NULL,
  `CANTIDAD` INT(11) NULL DEFAULT NULL,
  `FC_INSERT` DATETIME NULL DEFAULT NULL,
  `FC_MODIFICACION` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_FACTURA`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ODS_DM_CICLOS_FACTURACION`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ODS_DM_CICLOS_FACTURACION` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ODS_DM_CICLOS_FACTURACION` (
  `ID_CICLO_FACTURACION` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `DE_CICLO_FACTURACION` VARCHAR(512) NULL DEFAULT NULL,
  `FC_INSERT` DATETIME NULL DEFAULT NULL,
  `FC_MODIFICACION` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_CICLO_FACTURACION`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ODS_DM_METODOS_PAGO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ODS_DM_METODOS_PAGO` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ODS_DM_METODOS_PAGO` (
  `ID_METODO_PAGO` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `DE_METODO_PAGO` VARCHAR(512) NULL DEFAULT NULL,
  `FC_INSERT` DATETIME NULL DEFAULT NULL,
  `FC_MODIFICACION` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_METODO_PAGO`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

SHOW WARNINGS;

commit;

/*Modificaciones sobre las tablas y a帽adimos las PK y FK*/

alter table PODS.ODS_HC_FACTURAS ADD INDEX fk_fact_cli_idx (ID_CLIENTE ASC);
alter table PODS.ODS_HC_FACTURAS ADD constraint fk_fact_cli foreign key (ID_CLIENTE)
  references PODS.ODS_HC_CLIENTES (ID_CLIENTE);
  
alter table PODS.ODS_HC_FACTURAS ADD INDEX fk_fact_metpag_idx (ID_METODO_PAGO ASC);
alter table PODS.ODS_HC_FACTURAS ADD constraint fk_fact_metpag foreign key (ID_METODO_PAGO)
  references PODS.ODS_DM_METODOS_PAGO (ID_METODO_PAGO);
  
alter table PODS.ODS_HC_FACTURAS ADD INDEX fk_fact_cicfact_idx (ID_CICLO_FACTURACION ASC);
alter table PODS.ODS_HC_FACTURAS ADD constraint fk_fact_cicfact foreign key (ID_CICLO_FACTURACION)
  references PODS.ODS_DM_CICLOS_FACTURACION (ID_CICLO_FACTURACION);
  
/*Insertar valores*/

insert into ODS_DM_METODOS_PAGO (DE_METODO_PAGO, FC_INSERT, FC_MODIFICACION)
select distinct UPPER(trim(BILL_METHOD)), now(), now()
from STAGE.STG_FACTURAS_FCT
where trim(BILL_METHOD)<>'';

commit;

INSERT into ODS_DM_METODOS_PAGO values (999,'DESCONOCIDO',now(),now());
INSERT into ODS_DM_METODOS_PAGO values (998,'NO APLICA',now(),now());

commit;
analyze table ODS_DM_METODOS_PAGO;

insert into ODS_DM_CICLOS_FACTURACION (DE_CICLO_FACTURACION, FC_INSERT, FC_MODIFICACION)
select distinct UPPER(trim(BILL_CYCLE)), now(), now()
from STAGE.STG_FACTURAS_FCT
where trim(BILL_CYCLE)<>'';

commit;

INSERT into ODS_DM_CICLOS_FACTURACION values (999,'DESCONOCIDO',now(),now());
INSERT into ODS_DM_CICLOS_FACTURACION values (998,'NO APLICA',now(),now());

commit;
analyze table ODS_DM_CICLOS_FACTURACION;

SET FOREIGN_KEY_CHECKS=0;

INSERT into PODS.ODS_HC_FACTURAS 
SELECT
FACT.BILL_REF_NO AS ID_FACTURA, 
FACT.CUSTOMER_ID AS ID_CLIENTE, 
CASE WHEN TRIM(START_DATE)<>'' THEN STR_TO_DATE(START_DATE,'%Y-%m-%d %H:%i:%s') 
    ELSE STR_TO_DATE('9999-12-31 00:00:00','%Y-%m-%d %H:%i:%s') END FC_INICIO, 
CASE WHEN TRIM(END_DATE)<>'' THEN STR_TO_DATE(END_DATE,'%Y-%m-%d %H:%i:%s') 
    ELSE STR_TO_DATE('9999-12-31 00:00:00','%Y-%m-%d %H:%i:%s') END FC_FIN, 
CASE WHEN TRIM(STATEMENT_DATE)<>'' THEN STR_TO_DATE(STATEMENT_DATE,'%Y-%m-%d %H:%i:%s') 
    ELSE STR_TO_DATE('9999-12-31 00:00:00','%Y-%m-%d %H:%i:%s') END FC_ESTADO, 
CASE WHEN TRIM(PAYMENT_DATE)<>'' THEN STR_TO_DATE(PAYMENT_DATE,'%Y-%m-%d %H:%i:%s') 
    ELSE STR_TO_DATE('9999-12-31 00:00:00','%Y-%m-%d %H:%i:%s') END FC_PAGO, 
CFAC.ID_CICLO_FACTURACION,
MPAGO.ID_METODO_PAGO,
ROUND(AMOUNT,0) AS CANTIDAD,
NOW(),
STR_TO_DATE('31/12/9999','%d/%m/%Y')
FROM STAGE.STG_FACTURAS_FCT FACT
INNER JOIN PODS.ODS_DM_CICLOS_FACTURACION CFAC ON CASE WHEN TRIM(FACT.BILL_CYCLE)<>'' 
THEN UPPER(TRIM(FACT.BILL_CYCLE)) ELSE 'DESCONOCIDO' END=CFAC.DE_CICLO_FACTURACION
INNER JOIN PODS.ODS_DM_METODOS_PAGO MPAGO ON CASE WHEN TRIM(FACT.BILL_METHOD)<>'' 
THEN UPPER(TRIM(FACT.BILL_METHOD)) ELSE 'DESCONOCIDO' END=MPAGO.DE_METODO_PAGO;

SET FOREIGN_KEY_CHECKS=1;

commit;
analyze table PODS.ODS_HC_FACTURAS;

** Creamos el modelo LLAMADAS

USE PODS;

-- -----------------------------------------------------
-- Table `ODS_HC_LLAMADAS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ODS_HC_LLAMADAS` ;
SHOW WARNINGS;

CREATE TABLE IF NOT EXISTS `ODS_HC_LLAMADAS` (
  `ID_LLAMADA` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `ID_IVR` INT(11) NULL DEFAULT NULL,
  `TELEFONO_LLAMADA` BIGINT(20) NULL DEFAULT NULL,
  `ID_CLIENTE` INT(11) NULL DEFAULT NULL,
  `FC_INICIO_LLAMADA` DATETIME NULL DEFAULT NULL,
  `FC_FIN_LLAMADA` DATETIME NULL DEFAULT NULL,
  `ID_DEPARTAMENTO_CC` INT(10) UNSIGNED NULL DEFAULT NULL,
  `FLG_TRANSFERIDO` TINYINT(1) NULL DEFAULT NULL,
  `ID_AGENTE_CC` INT(10) UNSIGNED NULL DEFAULT NULL,
  `FC_INSERT` DATETIME NULL DEFAULT NULL,
  `FC_MODIFICACION` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_LLAMADA`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ODS_DM_DEPARTAMENTOS_CC`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ODS_DM_DEPARTAMENTOS_CC` ;
SHOW WARNINGS;

CREATE TABLE IF NOT EXISTS `ODS_DM_DEPARTAMENTOS_CC` (
  `ID_DEPARTAMENTO_CC` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `DE_DEPARTAMENTO_CC` VARCHAR(512) NULL DEFAULT NULL,
  `FC_INSERT` DATETIME NULL DEFAULT NULL,
  `FC_MODIFICACION` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_DEPARTAMENTO_CC`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ODS_DM_AGENTES_CC`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ODS_DM_AGENTES_CC` ;
SHOW WARNINGS;

CREATE TABLE IF NOT EXISTS `ODS_DM_AGENTES_CC` (
  `ID_AGENTE_CC` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `DE_AGENTE_CC` VARCHAR(512) NULL DEFAULT NULL,
  `FC_INSERT` DATETIME NULL DEFAULT NULL,
  `FC_MODIFICACION` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_AGENTE_CC`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

SHOW WARNINGS;

/*Modificaciones sobre las tablas y a帽adimos las PK y FK*/
alter table PODS.ODS_HC_LLAMADAS ADD INDEX fk_llam_dep_idx (ID_DEPARTAMENTO_CC ASC);
alter table PODS.ODS_HC_LLAMADAS ADD constraint fk_llam_dep foreign key (ID_DEPARTAMENTO_CC)
  references PODS.ODS_DM_DEPARTAMENTOS_CC (ID_DEPARTAMENTO_CC);
  
alter table PODS.ODS_HC_LLAMADAS ADD INDEX fk_llam_ag_idx (ID_AGENTE_CC ASC);
alter table PODS.ODS_HC_LLAMADAS ADD constraint fk_llam_ag foreign key (ID_AGENTE_CC)
  references PODS.ODS_DM_AGENTES_CC (ID_AGENTE_CC);
  
alter table PODS.ODS_HC_LLAMADAS ADD INDEX fk_llam_cli_idx (ID_CLIENTE ASC);
alter table PODS.ODS_HC_LLAMADAS ADD constraint fk_llam_cli foreign key (ID_CLIENTE)
  references PODS.ODS_HC_CLIENTES (ID_CLIENTE);

/*Insertar valores*/

insert into ODS_DM_DEPARTAMENTOS_CC (DE_DEPARTAMENTO_CC, FC_INSERT, FC_MODIFICACION)
select distinct UPPER(trim(SERVICE)), now(), now()
from STAGE.STG_CONTACTOS_IVR
where trim(SERVICE)<>'';

commit;

INSERT into ODS_DM_DEPARTAMENTOS_CC values (99,'DESCONOCIDO',now(),now());
INSERT into ODS_DM_DEPARTAMENTOS_CC values (98,'NO APLICA',now(),now());

commit;
analyze table ODS_DM_DEPARTAMENTOS_CC;

insert into ODS_DM_AGENTES_CC (DE_AGENTE_CC, FC_INSERT, FC_MODIFICACION)
select distinct UPPER(trim(AGENT)), now(), now()
from STAGE.STG_CONTACTOS_IVR
where trim(AGENT)<>'';

commit;

INSERT into ODS_DM_AGENTES_CC values (9999,'DESCONOCIDO',now(),now());
INSERT into ODS_DM_AGENTES_CC values (9998,'NO APLICA',now(),now());

commit;
analyze table ODS_DM_AGENTES_CC;

SET FOREIGN_KEY_CHECKS=0;

INSERT into PODS.ODS_HC_LLAMADAS 
SELECT
ID AS ID_IVR,
PHONE_NUMBER AS TELEFONO_LLAMADA,
CLIE.ID_CLIENTE AS ID_CLIENTE,
START_DATETIME AS FC_INICIO_LLAMADA,
END_DATETIME AS FC_FIN_LLAMADA,
DEPA.DE_DEPARTAMENTO_CC,
LLAM.FLG_TRANSFER AS FLG_TRANSFERIDO,
AGEN.DE_AGENTE_CC,
NOW(),
STR_TO_DATE('31/12/9999','%d/%m/%Y')
FROM STAGE.STG_CONTACTOS_IVR LLAM
INNER JOIN PODS.ODS_DM_DEPARTAMENTOS_CC DEPA ON CASE WHEN TRIM(LLAM.SERVICE)<>'' 
THEN UPPER(TRIM(LLAM.SERVICE)) ELSE 'DESCONOCIDO' END=DEPA.DE_DEPARTAMENTO_CC
INNER JOIN PODS.ODS_DM_AGENTES_CC AGEN ON CASE WHEN TRIM(LLAM.AGENT)<>'' 
THEN UPPER(TRIM(LLAM.AGENT)) ELSE 'DESCONOCIDO' END=AGEN.DE_AGENTE_CC
INNER JOIN PODS.ODS_HC_CLIENTES CLIE ON CASE WHEN TRIM(LLAM.PHONE_NUMBER)<>'' 
THEN UPPER(TRIM(LLAM.PHONE_NUMBER)) ELSE 'DESCONOCIDO' END=CLIE.TELEFONO_CLIENTE;

SET FOREIGN_KEY_CHECKS=1;

commit;
analyze table PODS.ODS_HC_FACTURAS;
